{"version":3,"sources":["store/store.js","components/Grid.js","components/ult.js","components/BFS.js","components/Dijstra.js","components/Header.js","components/App.js","serviceWorker.js","index.js","components/header.module.css","components/button.module.scss","store/Grid.module.css","components/selectMenu.module.css"],"names":["gird","i","row","j","push","col","distance","Infinity","state","previousNode","icon","color","iconstyle","initialState","grid","start","end","prevStartCellState","prevStartCellColor","prevEndCellState","prevEndCellColor","colorize","column","type","paintPath","store","createStore","action","wallGrid","girdStyle","wall","newGrid","visited","clearPathGrid","start_row","start_col","end_row","end_col","length","clearGrid","startrow","startcol","endrow","endcol","moveGrid","prevState","prevColor","moveEndGrid","prevEndState","prevEndColor","pathGrid","path","applyMiddleware","Grid","stopMoveCell","setState","moveStart","moveEnd","paint","startMoveCell","handleMousrover","bind","this","props","setStart","setEnd","drawWall","id","map","rowIndex","key","value","cellIndex","onMouseEnter","onMouseUp","onMouseDown","onClick","className","style","marginLeft","Component","connect","dispatch","sleep","milliseconds","Promise","resolve","reject","setTimeout","bfs","startCoordinates","callback","a","distanceFromTop","distanceFromLeft","location","status","queue","Set","currentLocation","shift","exploreInDirection","newLocationNorth","newLocationEast","newLocationSouth","newLocationWest","locationStatus","set","maxRowSize","maxColSize","dft","dfl","has","direction","newPath","slice","newLocation","add","bfsAnimation","paintFun","paintPathFun","ans","North","South","West","East","dr","Dijstra","require","unvisitedNodes","getAllNodes","visitedNodesInOrder","sortNodesByDistance","closestNode","updateUnvisitedNeighbors","node","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","sort","nodeA","nodeB","nodes","getNodesInShortestPathOrder","finishNode","nodesInShortestPathOrder","currentNode","unshift","DijstraAnimation","Header","warning","addNotification","title","message","container","insert","animationIn","animationOut","dismiss","duration","width","startAnimation","algo","Navbar","headerStyle","header","expand","onSelect","eventKey","Brand","brand","href","fontWeight","fontSize","role","buttonStyle","startBtn","textDecoration","buttonText","endBtn","clear","clearPath","marginTop","Toggle","aria-controls","Collapse","Nav","NavDropdown","headertitle","Item","navitem","React","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.a60ae5ae.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport loggerMiddleware from 'redux-logger';\nimport girdStyle from './Grid.module.css';\n\nconst createNode = (row, col) => {\n  return {\n    col,\n    row,\n    distance: Infinity,\n    state: 'Empty',\n    previousNode: null,\n    icon: '',\n    color: '',\n    iconstyle: '',\n  };\n};\n\nlet gird = [];\nfor (let i = 0; i < 20; ++i) {\n  //current row\n  let row = [];\n  for (let j = 0; j < 40; ++j) {\n    row.push(createNode(i, j));\n  }\n  gird.push(row);\n}\n//set up the init start & end\ngird[10][10].state = 'start';\ngird[10][10].icon = 'fas fa-sun';\ngird[10][39].state = 'Goal';\ngird[10][39].icon = 'fas fa-bullseye';\n\nconst initialState = {\n  grid: gird,\n  start: [10, 10],\n  end: [10, 39],\n  prevStartCellState: 'Empty',\n  prevStartCellColor: '',\n  prevEndCellState: 'Empty',\n  prevEndCellColor: '',\n};\n\n//action type\nconst COLORIZE = 'COLORIZE';\nconst CLEAR = 'CLEAR';\nconst SET_START = 'SET_START';\nconst SET_END = 'SET_END';\nconst PAINT_PATH = 'PAINT_PATH';\nconst DRAW_WALL = 'DRAW_WALL';\nconst CLEAR_PATH = 'CLEAR_PATH';\n//action creator\nexport const colorize = (row, column) => ({ type: COLORIZE, row, column });\nexport const drawWall = (row, column) => ({ type: DRAW_WALL, row, column });\nexport const clear = () => ({ type: CLEAR });\nexport const setStart = (row, column) => ({ type: SET_START, row, column });\nexport const setEnd = (row, column) => ({ type: SET_END, row, column });\nexport const paintPath = (row, column) => ({ type: PAINT_PATH, row, column });\nexport const clearPath = () => ({ type: CLEAR_PATH });\n//reducer\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case DRAW_WALL:\n      const wallGrid = [...state.grid];\n      wallGrid[action.row] = [...wallGrid[action.row]];\n      wallGrid[action.row][action.column] = {\n        ...wallGrid[action.row][action.column],\n      };\n      if (\n        wallGrid[action.row][action.column].state !== 'Goal' &&\n        wallGrid[action.row][action.column].state !== 'start' &&\n        wallGrid[action.row][action.column].state !== 'Blocked'\n      ) {\n        wallGrid[action.row][action.column].state = 'Blocked';\n        wallGrid[action.row][action.column].color = girdStyle.wall;\n      } else if (wallGrid[action.row][action.column].state === 'Blocked') {\n        wallGrid[action.row][action.column].state = 'Empty';\n        wallGrid[action.row][action.column].color = '';\n      }\n\n      return { ...state, grid: wallGrid };\n    case COLORIZE:\n      const newGrid = [...state.grid];\n      newGrid[action.row] = [...newGrid[action.row]];\n      newGrid[action.row][action.column] = {\n        ...newGrid[action.row][action.column],\n      };\n      if (newGrid[action.row][action.column].color === '') {\n        newGrid[action.row][action.column].state = 'Visited';\n        newGrid[action.row][action.column].color = girdStyle.visited;\n      }\n\n      return { ...state, grid: newGrid };\n    case CLEAR_PATH:\n      const clearPathGrid = [...state.grid];\n      //set the start state back\n      const [start_row, start_col] = state.start;\n      clearPathGrid[start_row][start_col] = {\n        ...clearPathGrid[start_row][start_col],\n      };\n      clearPathGrid[start_row][start_col].state = 'start';\n      clearPathGrid[start_row][start_col].color = '';\n      //set the goal state back\n      const [end_row, end_col] = state.end;\n      clearPathGrid[end_row][end_col] = { ...clearPathGrid[end_row][end_col] };\n      clearPathGrid[end_row][end_col].state = 'Goal';\n      clearPathGrid[end_row][end_col].color = '';\n      for (let i = 0; i < clearPathGrid.length; ++i) {\n        for (let j = 0; j < clearPathGrid[0].length; ++j) {\n          if (clearPathGrid[i][j].state === 'Visited') {\n            clearPathGrid[i][j] = { ...clearPathGrid[i][j] };\n            clearPathGrid[i][j].state = 'Empty';\n            clearPathGrid[i][j].color = '';\n          }\n        }\n      }\n      return { ...state, grid: clearPathGrid };\n    case CLEAR:\n      let clearGrid = [...initialState.grid];\n      const [startrow, startcol] = initialState.start;\n      clearGrid[startrow] = [...clearGrid[startrow]];\n      clearGrid[startrow][startcol] = { ...clearGrid[startrow][startcol] };\n      clearGrid[startrow][startcol] = {\n        state: 'start',\n        color: '',\n        icon: 'fas fa-sun',\n      };\n\n      const [endrow, endcol] = initialState.end;\n      clearGrid[endrow] = [...clearGrid[endrow]];\n      clearGrid[endrow][endcol] = { ...clearGrid[endrow][endcol] };\n      clearGrid[endrow][endcol] = {\n        state: 'Goal',\n        color: '',\n        icon: 'fas fa-bullseye',\n      };\n      return {\n        ...initialState,\n      };\n    case SET_START:\n      const moveGrid = [...state.grid];\n      moveGrid[action.row] = [...moveGrid[action.row]];\n      //change the prev cell state\n      moveGrid[state.start[0]][state.start[1]] = {\n        ...moveGrid[state.start[0]][state.start[1]],\n      };\n      moveGrid[state.start[0]][state.start[1]].state = state.prevStartCellState;\n      moveGrid[state.start[0]][state.start[1]].color = state.prevStartCellColor;\n      moveGrid[state.start[0]][state.start[1]].icon = '';\n      //save the prev cell state for later change\n      let prevState = moveGrid[action.row][action.column].state;\n      let prevColor = moveGrid[action.row][action.column].color;\n      //change the curr cell state\n      moveGrid[action.row][action.column] = {\n        ...moveGrid[action.row][action.column],\n      };\n      moveGrid[action.row][action.column].color = '';\n      moveGrid[action.row][action.column].state = 'start';\n      moveGrid[action.row][action.column].icon = 'fas fa-sun';\n      moveGrid[action.row][action.column].iconstyle = girdStyle.start;\n      return {\n        ...state,\n        grid: moveGrid,\n        start: [action.row, action.column],\n        prevStartCellState: prevState,\n        prevStartCellColor: prevColor,\n      };\n    case SET_END:\n      const moveEndGrid = [...state.grid];\n      moveEndGrid[action.row] = [...moveEndGrid[action.row]];\n      //change the prev cell state\n      moveEndGrid[state.end[0]][state.end[1]] = {\n        ...moveEndGrid[state.end[0]][state.end[1]],\n      };\n      moveEndGrid[state.end[0]][state.end[1]].state = state.prevEndCellState;\n      moveEndGrid[state.end[0]][state.end[1]].color = state.prevEndCellColor;\n      moveEndGrid[state.end[0]][state.end[1]].icon = '';\n\n      //save the prev cell state for later change\n      let prevEndState = moveEndGrid[action.row][action.column].state;\n      let prevEndColor = moveEndGrid[action.row][action.column].color;\n      //change the curr cell state\n      moveEndGrid[action.row][action.column] = {\n        ...moveEndGrid[action.row][action.column],\n      };\n      moveEndGrid[action.row][action.column].color = '';\n      moveEndGrid[action.row][action.column].state = 'Goal';\n      moveEndGrid[action.row][action.column].icon = 'fas fa-bullseye';\n      moveEndGrid[action.row][action.column].iconstyle = girdStyle.end;\n      return {\n        ...state,\n        grid: moveEndGrid,\n        end: [action.row, action.column],\n        prevEndCellState: prevEndState,\n        prevEndCellColor: prevEndColor,\n      };\n    case PAINT_PATH:\n      const pathGrid = [...state.grid];\n      pathGrid[action.row][action.column] = {\n        ...pathGrid[action.row][action.column],\n      };\n      pathGrid[action.row][action.column].color = girdStyle.path;\n      return { ...state, grid: pathGrid };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer, applyMiddleware());\n\nexport default store;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  colorize,\n  paintPath,\n  drawWall,\n  setStart,\n  setEnd,\n} from '../store/store';\nimport 'font-awesome/css/font-awesome.min.css';\nimport style from './selectMenu.module.css';\nclass Grid extends Component {\n  constructor() {\n    super();\n    this.state = {\n      paint: false,\n      moveStart: false,\n      moveEnd: false,\n    };\n\n    this.handleMousrover = this.handleMousrover.bind(this);\n  }\n\n  async handleMousrover(row, col) {\n    if (this.state.moveStart && this.props.grid[row][col].state !== 'Goal') {\n      await this.props.setStart(row, col);\n    } else if (\n      this.state.moveEnd &&\n      this.props.grid[row][col].state !== 'start'\n    ) {\n      await this.props.setEnd(row, col);\n    } else if (this.state.paint) {\n      this.props.drawWall(row, col);\n    }\n  }\n  stopMoveCell = (grid, row, col) => {\n    if (grid[row][col].state === 'start') {\n      this.setState({ moveStart: false });\n    } else if (grid[row][col].state === 'Goal') {\n      this.setState({ moveEnd: false });\n    } else {\n      this.setState({ paint: false });\n    }\n  };\n\n  startMoveCell = (grid, row, col) => {\n    if (grid[row][col].state === 'start') {\n      this.setState({ moveStart: true });\n    } else if (grid[row][col].state === 'Goal') {\n      this.setState({ moveEnd: true });\n    } else {\n      this.setState({ paint: true });\n    }\n  };\n  render() {\n    const { grid } = this.props;\n\n    return (\n      <div id='pixelate'>\n        {/* truncated for brevity... */}\n        <table>\n          <tbody>\n            {grid.map((row, rowIndex) => (\n              <tr key={rowIndex} value={rowIndex}>\n                {row.map((color, cellIndex) => (\n                  <td\n                    id={cellIndex}\n                    key={cellIndex}\n                    onMouseEnter={() =>\n                      this.handleMousrover(rowIndex, cellIndex)\n                    }\n                    onMouseUp={() => {\n                      this.stopMoveCell(grid, rowIndex, cellIndex);\n                    }}\n                    onMouseDown={() => {\n                      this.startMoveCell(grid, rowIndex, cellIndex);\n                    }}\n                    onClick={() => {\n                      this.props.drawWall(rowIndex, cellIndex);\n                    }}\n                    className={grid[rowIndex][cellIndex].color}\n                  >\n                    <i\n                      className={`${grid[rowIndex][cellIndex].icon} ${grid[rowIndex][cellIndex].iconstyle}`}\n                      style={{ color: 'blue', marginLeft: '3.5px' }}\n                    ></i>\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    grid: state.grid,\n    start: state.start,\n    end: state.end,\n  };\n};\nconst mapDispatch = (dispatch) => {\n  return {\n    paint: (row, col) => dispatch(colorize(row, col)),\n    paintPath: (row, col) => dispatch(paintPath(row, col)),\n    drawWall: (row, col) => dispatch(drawWall(row, col)),\n    setStart: (row, col) => dispatch(setStart(row, col)),\n    setEnd: (row, col) => dispatch(setEnd(row, col)),\n  };\n};\nexport default connect(mapState, mapDispatch)(Grid);\n","export const sleep = (milliseconds) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, milliseconds);\n  });\n};\n","import { sleep } from './ult';\n\nexport const bfs = async function (grid, startCoordinates, callback) {\n  var distanceFromTop = startCoordinates[0];\n  var distanceFromLeft = startCoordinates[1];\n\n  // Each \"location\" will store its coordinates\n  // and the shortest path required to arrive there\n  var location = {\n    distanceFromTop: distanceFromTop,\n    distanceFromLeft: distanceFromLeft,\n    path: [],\n    status: 'Start',\n  };\n  callback(startCoordinates[0], startCoordinates[1]);\n  await sleep(0);\n\n  // Initialize the queue with the start location already inside\n  var queue = [location];\n  const visited = new Set();\n  // Loop through the grid searching for the goal\n  while (queue.length > 0) {\n    // Take the first location off the queue\n    var currentLocation = queue.shift();\n\n    // Explore North\n    var newLocationNorth = await exploreInDirection(\n      currentLocation,\n      'North',\n      grid,\n      callback,\n      visited\n    );\n\n    if (newLocationNorth.status === 'Goal') {\n      return newLocationNorth.path;\n    } else if (newLocationNorth.status === 'Valid') {\n      queue.push(newLocationNorth);\n    }\n\n    // Explore East\n    var newLocationEast = await exploreInDirection(\n      currentLocation,\n      'East',\n      grid,\n      callback,\n      visited\n    );\n    if (newLocationEast.status === 'Goal') {\n      return newLocationEast.path;\n    } else if (newLocationEast.status === 'Valid') {\n      queue.push(newLocationEast);\n    }\n\n    // Explore South\n    var newLocationSouth = await exploreInDirection(\n      currentLocation,\n      'South',\n      grid,\n      callback,\n      visited\n    );\n    if (newLocationSouth.status === 'Goal') {\n      return newLocationSouth.path;\n    } else if (newLocationSouth.status === 'Valid') {\n      queue.push(newLocationSouth);\n    }\n\n    // Explore West\n    var newLocationWest = await exploreInDirection(\n      currentLocation,\n      'West',\n      grid,\n      callback,\n      visited\n    );\n    if (newLocationWest.status === 'Goal') {\n      return newLocationWest.path;\n    } else if (newLocationWest.status === 'Valid') {\n      queue.push(newLocationWest);\n    }\n  }\n\n  // No valid path found\n  return false;\n};\n\n// This function will check a location's status\n// (a location is \"valid\" if it is on the grid, is not an \"obstacle\",\n// and has not yet been visited by our algorithm)\n// Returns \"Valid\", \"Invalid\", \"Blocked\", or \"Goal\"\nvar locationStatus = function (location, grid, set) {\n  var maxRowSize = grid.length;\n  var maxColSize = grid[0].length;\n  var dft = location.distanceFromTop;\n  var dfl = location.distanceFromLeft;\n\n  if (\n    location.distanceFromLeft < 0 ||\n    location.distanceFromLeft >= maxColSize ||\n    location.distanceFromTop < 0 ||\n    location.distanceFromTop >= maxRowSize ||\n    set.has(`${location.distanceFromTop}|${location.distanceFromLeft}`)\n  ) {\n    // location is not on the grid--return false\n    return 'Invalid';\n  } else if (grid[dft][dfl].state === 'Goal') {\n    return 'Goal';\n  } else if (grid[dft][dfl].state !== 'Empty') {\n    // location is either an obstacle or has been visited\n    return 'Blocked';\n  } else {\n    return 'Valid';\n  }\n};\n\n// Explores the grid from the given location in the given\n// direction\nvar exploreInDirection = async function (\n  currentLocation,\n  direction,\n  grid,\n  callback,\n  set\n) {\n  var newPath = currentLocation.path.slice();\n  newPath.push(direction);\n\n  var dft = currentLocation.distanceFromTop;\n  var dfl = currentLocation.distanceFromLeft;\n\n  if (direction === 'North') {\n    dft -= 1;\n  } else if (direction === 'East') {\n    dfl += 1;\n  } else if (direction === 'South') {\n    dft += 1;\n  } else if (direction === 'West') {\n    dfl -= 1;\n  }\n\n  var newLocation = {\n    distanceFromTop: dft,\n    distanceFromLeft: dfl,\n    path: newPath,\n    status: 'Unknown',\n  };\n  newLocation.status = locationStatus(newLocation, grid, set);\n\n  // If this new location is valid, mark it as 'Visited'\n  if (newLocation.status === 'Valid') {\n    set.add(`${newLocation.distanceFromTop}|${newLocation.distanceFromLeft}`);\n    callback(newLocation.distanceFromTop, newLocation.distanceFromLeft);\n    await sleep(0);\n  } else if (newLocation.status === 'Goal') {\n    callback(newLocation.distanceFromTop, newLocation.distanceFromLeft);\n    await sleep(0);\n  }\n\n  return newLocation;\n};\n\nexport const bfsAnimation = async (grid, start, paintFun, paintPathFun) => {\n  let ans = await bfs(grid, start, paintFun);\n\n  //north,south,west,east\n  let direction = {\n    North: [-1, 0],\n    South: [1, 0],\n    West: [0, -1],\n    East: [0, 1],\n  };\n\n  let startrow = start[0];\n  let startcol = start[1];\n  //draw the path after we have the direction from bfs function\n  for (let i = 0; i < ans.length; ++i) {\n    paintPathFun(startrow, startcol);\n    await sleep(20);\n    let dr = direction[ans[i]];\n    startrow += dr[0];\n    startcol += dr[1];\n  }\n  //draw the last cell\n  paintPathFun(startrow, startcol);\n  await sleep(20);\n};\n","import { sleep } from './ult';\nvar Heap = require('collections/heap');\n\nexport const Dijstra = async (grid, startCoordinates, end, callback) => {\n  // let size = grid.length;\n  // for (let i = 0; i < grid.length; ++i) {\n  //   for (let j = 0; j < grid[0].length; ++j) {\n  //     grid[i][j] = { ...grid[i][j] };\n  //     grid[i][j].coord = [i, j];\n  //     grid[i][j].distance = Infinity;\n  //     if (i === startCoordinates[0] && j === startCoordinates[1]) {\n  //       grid[i][j] = { ...grid[i][j] };\n  //       grid[i][j].coord = [i, j];\n  //       grid[i][j].distance = 0;\n  //     }\n  //   }\n  // }\n  const [startrow, startcol] = startCoordinates;\n  grid[startrow][startcol].distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n\n  const visitedNodesInOrder = [];\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    callback(closestNode.row, closestNode.col);\n    await sleep(0);\n    if (closestNode.state === 'Visited') continue;\n    if (closestNode.state === 'Blocked') continue;\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n\n    closestNode.state = 'Visited';\n    visitedNodesInOrder.push(closestNode);\n\n    if (closestNode === grid[end[0]][end[1]]) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n};\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const { row, col } = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n\n  return neighbors.filter(\n    (neighbor) => neighbor.state !== 'Visited' && neighbor.state !== 'Blocked'\n  );\n}\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n\n  // console.log(\"nei\",unvisitedNeighbors)\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\nexport function getNodesInShortestPathOrder(finishNode, grid) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n\nexport async function DijstraAnimation(\n  grid,\n  start,\n  end,\n  paintFun,\n  paintPathFun\n) {\n  await Dijstra(grid, start, end, paintFun);\n  const path = getNodesInShortestPathOrder(grid[end[0]][end[1]]);\n\n  for (let i = 0; i < path.length; ++i) {\n    if (grid[path[i].row][path[i].col].state === 'Blocked') continue;\n    paintPathFun(path[i].row, path[i].col);\n    await sleep(20);\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clear, colorize, paintPath, clearPath } from '../store/store';\nimport { bfsAnimation } from './BFS';\nimport { DijstraAnimation } from './Dijstra';\n\nimport headerStyle from './header.module.css';\nimport buttonStyle from './button.module.scss';\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\n\nimport { store } from 'react-notifications-component';\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      algo: 'Algorithms',\n    };\n  }\n  warning = () => {\n    store.addNotification({\n      title: 'No Algo selected',\n      message: 'Please Select an algorithm to run the visualizer',\n      type: 'danger',\n      container: 'top-left',\n      insert: 'top',\n      animationIn: ['animated', 'fadeIn'],\n      animationOut: ['animated', 'fadeOut'],\n      dismiss: {\n        duration: 2000,\n      },\n      width: 400,\n    });\n  };\n  startAnimation = async (grid, start, end) => {\n    switch (this.state.algo) {\n      case 'BreathFirstSearch':\n        await bfsAnimation(grid, start, this.props.paint, this.props.paintPath);\n        break;\n      case \"Dijkstra's Algorithm\":\n        await DijstraAnimation(\n          grid,\n          start,\n          end,\n          this.props.paint,\n          this.props.paintPath\n        );\n        break;\n      default:\n        this.warning();\n        break;\n    }\n  };\n\n  render() {\n    const { grid, start, end } = this.props;\n\n    return (\n      // <div className={headerStyle.header}>\n      //   <h3>PathFinding Visualizer</h3>\n\n      //   <select name='cars' id='cars' className={headerStyle.select}>\n      //     <option value='volvo'>Volvo</option>\n      //     <option value='saab'>Saab</option>\n      //     <option value='mercedes'>Mercedes</option>\n      //     <option value='audi'>Audi</option>\n      //   </select>\n\n      //   <button\n      //     className={buttonStyle.startBtn}\n      //     onClick={() => this.search(grid, start)}\n      //   >\n      //     <p style={{ color: 'white', fontWeight: 'bold' }}>Start</p>\n      //   </button>\n\n      // </div>\n      <Navbar\n        className={headerStyle.header}\n        expand='lg'\n        onSelect={(eventKey) => {\n          this.setState({ algo: eventKey });\n        }}\n      >\n        <Navbar.Brand\n          className={headerStyle.brand}\n          href='https://chaohuichen.github.io/PathFindingVisualizer/'\n          style={{ fontWeight: 'bold', color: 'white', fontSize: '30px' }}\n        >\n          PathFinding Visualizer\n        </Navbar.Brand>\n\n        <a\n          href='#start'\n          role='button'\n          className={buttonStyle.startBtn}\n          onClick={() => {\n            this.startAnimation(grid, start, end);\n\n            return false;\n          }}\n          style={{ textDecoration: 'none' }}\n        >\n          <p className={buttonStyle.buttonText}>Start</p>\n        </a>\n        <a\n          href='#clear'\n          role='button'\n          className={buttonStyle.endBtn}\n          onClick={this.props.clear}\n          style={{ textDecoration: 'none' }}\n        >\n          <p className={buttonStyle.buttonText} style={{ marginLeft: '14px' }}>\n            Clear\n          </p>\n        </a>\n        <a\n          href='#start'\n          role='button'\n          className={buttonStyle.push}\n          onClick={() => {\n            this.props.clearPath();\n            return false;\n          }}\n          style={{ textDecoration: 'none' }}\n        >\n          <p\n            className={buttonStyle.buttonText}\n            style={{ marginLeft: '16px', marginTop: '10px' }}\n          >\n            Clear Path\n          </p>\n        </a>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav>\n            {/* <Nav.Link href='#link'>Link</Nav.Link> */}\n            {/* <div className={headerStyle.text}>{this.state.algo}</div> */}\n            <NavDropdown\n              title={\n                <span className={headerStyle.headertitle}>\n                  {this.state.algo}\n                </span>\n              }\n              id='basic-nav-dropdown'\n            >\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey='BreathFirstSearch'\n              >\n                Breadth First Search\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey='DepthFirstSearch'\n              >\n                Depth First Search\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey='A * Algorithm'\n              >\n                A * Algorithm\n              </NavDropdown.Item>\n\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey=\"Dijkstra's Algorithm\"\n              >\n                Dijkstra's Algorithm\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    grid: state.grid,\n    start: state.start,\n    end: state.end,\n  };\n};\nconst mapDispatch = (dispatch) => {\n  return {\n    clear: () => dispatch(clear()),\n    paint: (row, col) => dispatch(colorize(row, col)),\n    paintPath: (row, col) => dispatch(paintPath(row, col)),\n    clearPath: () => dispatch(clearPath()),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Header);\n","import React from 'react';\nimport 'react-notifications-component/dist/theme.css';\nimport './App.css';\nimport Grid from './Grid';\nimport Header from './Header';\nimport ReactNotification from 'react-notifications-component';\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <ReactNotification />\n      <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2eggW\",\"brand\":\"header_brand__1vuum\",\"button\":\"header_button__aSONM\",\"navitem\":\"header_navitem__3_dhy\",\"text\":\"header_text__2Jjgw\",\"headertitle\":\"header_headertitle__2Ixkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonText\":\"button_buttonText__Gonjh\",\"startBtn\":\"button_startBtn__SxXco\",\"is-pushed\":\"button_is-pushed__2WFom\",\"endBtn\":\"button_endBtn__19Oqw\",\"push\":\"button_push__20MrS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visited\":\"Grid_visited__27TU0\",\"stretch\":\"Grid_stretch__2x8gV\",\"wall\":\"Grid_wall__1T6dr\",\"stretchwall\":\"Grid_stretchwall__2RXxf\",\"startPoint\":\"Grid_startPoint__1hSPD\",\"stretchStart\":\"Grid_stretchStart__1lqbB\",\"endPoint\":\"Grid_endPoint__2yg6q\",\"stretchEnd\":\"Grid_stretchEnd__17Jwa\",\"path\":\"Grid_path__CoIhK\",\"stretchPath\":\"Grid_stretchPath__33l3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"selectMenu_cell__3LuXH\"};"],"sourceRoot":""}