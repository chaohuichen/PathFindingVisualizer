{"version":3,"sources":["components/header.module.css","store/Grid.module.css","components/button.module.scss","components/selectMenu.module.css","store/store.js","components/Grid.js","components/ult.js","components/BFS.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","gird","Array","fill","i","length","state","color","icon","initialState","grid","start","end","prevStartCellState","prevStartCellColor","prevEndCellState","prevEndCellColor","colorize","row","column","type","paintPath","store","createStore","action","wallGrid","girdStyle","wall","newGrid","visited","clearGrid","startrow","startcol","endrow","endcol","prevEndState","moveGrid","prevState","prevColor","iconstyle","moveEndGrid","prevEndColor","pathGrid","path","Grid","stopMoveCell","col","setState","moveStart","moveEnd","paint","startMoveCell","handleMousrover","bind","this","props","setStart","setEnd","drawWall","id","map","rowIndex","key","cellIndex","onMouseOver","onMouseUp","onMouseDown","onClick","className","style","marginLeft","Component","connect","dispatch","sleep","milliseconds","Promise","resolve","reject","setTimeout","bfs","startCoordinates","callback","a","distanceFromTop","distanceFromLeft","location","status","queue","Set","currentLocation","shift","exploreInDirection","newLocationNorth","push","newLocationEast","newLocationSouth","newLocationWest","locationStatus","set","maxRowSize","maxColSize","dft","dfl","has","direction","newPath","slice","newLocation","add","Header","search","ans","North","South","West","East","dr","algo","Navbar","headerStyle","header","expand","onSelect","eventKey","Brand","brand","href","fontWeight","fontSize","role","buttonStyle","startBtn","textDecoration","buttonText","endBtn","clear","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","navitem","React","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9d848d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2eggW\",\"brand\":\"header_brand__1vuum\",\"button\":\"header_button__aSONM\",\"navitem\":\"header_navitem__3_dhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"visited\":\"Grid_visited__27TU0\",\"stretch\":\"Grid_stretch__2x8gV\",\"wall\":\"Grid_wall__1T6dr\",\"stretchwall\":\"Grid_stretchwall__2RXxf\",\"startPoint\":\"Grid_startPoint__1hSPD\",\"stretchStart\":\"Grid_stretchStart__1lqbB\",\"endPoint\":\"Grid_endPoint__2yg6q\",\"stretchEnd\":\"Grid_stretchEnd__17Jwa\",\"path\":\"Grid_path__CoIhK\",\"stretchPath\":\"Grid_stretchPath__33l3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startBtn\":\"button_startBtn__SxXco\",\"is-pushed\":\"button_is-pushed__2WFom\",\"endBtn\":\"button_endBtn__19Oqw\",\"buttonText\":\"button_buttonText__Gonjh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"selectMenu_cell__3LuXH\"};","import { createStore, applyMiddleware } from 'redux';\nimport loggerMiddleware from 'redux-logger';\nimport girdStyle from './Grid.module.css';\n\nlet gird = new Array(20).fill([]);\nfor (let i = 0; i < gird.length; ++i) {\n  gird[i] = new Array(40).fill({ state: 'Empty', color: '' });\n  //set up the start point and end point\n  if (i === 11) {\n    gird[10][10] = { state: 'start', color: '', icon: 'fas fa-sun' };\n    gird[10][39] = { state: 'Goal', color: '', icon: 'fas fa-bullseye' };\n  }\n}\n\nconst initialState = {\n  grid: gird,\n  start: [10, 10],\n  end: [10, 39],\n  prevStartCellState: 'Empty',\n  prevStartCellColor: '',\n  prevEndCellState: 'Empty',\n  prevEndCellColor: '',\n};\n\n//action type\nconst COLORIZE = 'COLORIZE';\nconst CLEAR = 'CLEAR';\nconst SET_START = 'SET_START';\nconst SET_END = 'SET_END';\nconst PAINT_PATH = 'PAINT_PATH';\nconst DRAW_WALL = 'DRAW_WALL';\n\n//action creator\nexport const colorize = (row, column) => ({ type: COLORIZE, row, column });\nexport const drawWall = (row, column) => ({ type: DRAW_WALL, row, column });\nexport const clear = () => ({ type: CLEAR });\nexport const setStart = (row, column) => ({ type: SET_START, row, column });\nexport const setEnd = (row, column) => ({ type: SET_END, row, column });\nexport const paintPath = (row, column) => ({ type: PAINT_PATH, row, column });\n\n//reducer\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case DRAW_WALL:\n      const wallGrid = [...state.grid];\n      wallGrid[action.row] = [...wallGrid[action.row]];\n      wallGrid[action.row][action.column] = {\n        ...wallGrid[action.row][action.column],\n      };\n      if (\n        wallGrid[action.row][action.column].state !== 'Goal' &&\n        wallGrid[action.row][action.column].state !== 'start'\n      ) {\n        wallGrid[action.row][action.column].state = 'Blocked';\n        wallGrid[action.row][action.column].color = girdStyle.wall;\n      }\n      return { ...state, grid: wallGrid };\n    case COLORIZE:\n      const newGrid = [...state.grid];\n      newGrid[action.row] = [...newGrid[action.row]];\n      newGrid[action.row][action.column] = {\n        ...newGrid[action.row][action.column],\n      };\n      if (newGrid[action.row][action.column].color === '') {\n        newGrid[action.row][action.column].state = 'Visited';\n        newGrid[action.row][action.column].color = girdStyle.visited;\n      }\n\n      return { ...state, grid: newGrid };\n    case CLEAR:\n      let clearGrid = [...initialState.grid];\n      const [startrow, startcol] = initialState.start;\n      clearGrid[startrow] = [...clearGrid[startrow]];\n      clearGrid[startrow][startcol] = { ...clearGrid[startrow][startcol] };\n      clearGrid[startrow][startcol] = {\n        state: 'start',\n        color: '',\n        icon: 'fas fa-sun',\n      };\n\n      const [endrow, endcol] = initialState.end;\n      clearGrid[endrow] = [...clearGrid[endrow]];\n      clearGrid[endrow][endcol] = { ...clearGrid[endrow][endcol] };\n      clearGrid[endrow][endcol] = {\n        state: 'Goal',\n        color: '',\n        icon: 'fas fa-bullseye',\n      };\n      return {\n        ...state,\n        grid: clearGrid,\n        start: initialState.start,\n        end: initialState.end,\n        prevStartCellState: initialState.prevStartCellState,\n        prevStartCellColor: initialState.prevStartCellColor,\n        prevEndCellState: initialState.prevEndState,\n        prevEndCellColor: initialState.prevEndCellColor,\n      };\n    case SET_START:\n      const moveGrid = [...state.grid];\n      moveGrid[action.row] = [...moveGrid[action.row]];\n      //change the prev cell state\n      moveGrid[state.start[0]][state.start[1]] = {\n        ...moveGrid[state.start[0]][state.start[1]],\n      };\n      moveGrid[state.start[0]][state.start[1]].state = state.prevStartCellState;\n      moveGrid[state.start[0]][state.start[1]].color = state.prevStartCellColor;\n      moveGrid[state.start[0]][state.start[1]].icon = '';\n      //save the prev cell state for later change\n      let prevState = moveGrid[action.row][action.column].state;\n      let prevColor = moveGrid[action.row][action.column].color;\n      //change the curr cell state\n      moveGrid[action.row][action.column] = {\n        ...moveGrid[action.row][action.column],\n      };\n      moveGrid[action.row][action.column].color = '';\n      moveGrid[action.row][action.column].state = 'start';\n      moveGrid[action.row][action.column].icon = 'fas fa-sun';\n      moveGrid[action.row][action.column].iconstyle = girdStyle.start;\n      return {\n        ...state,\n        grid: moveGrid,\n        start: [action.row, action.column],\n        prevStartCellState: prevState,\n        prevStartCellColor: prevColor,\n      };\n    case SET_END:\n      const moveEndGrid = [...state.grid];\n      moveEndGrid[action.row] = [...moveEndGrid[action.row]];\n      //change the prev cell state\n      moveEndGrid[state.end[0]][state.end[1]] = {\n        ...moveEndGrid[state.end[0]][state.end[1]],\n      };\n      moveEndGrid[state.end[0]][state.end[1]].state = state.prevEndCellState;\n      moveEndGrid[state.end[0]][state.end[1]].color = state.prevEndCellColor;\n      moveEndGrid[state.end[0]][state.end[1]].icon = '';\n\n      //save the prev cell state for later change\n      let prevEndState = moveEndGrid[action.row][action.column].state;\n      let prevEndColor = moveEndGrid[action.row][action.column].color;\n      //change the curr cell state\n      moveEndGrid[action.row][action.column] = {\n        ...moveEndGrid[action.row][action.column],\n      };\n      moveEndGrid[action.row][action.column].color = '';\n      moveEndGrid[action.row][action.column].state = 'Goal';\n      moveEndGrid[action.row][action.column].icon = 'fas fa-bullseye';\n      moveEndGrid[action.row][action.column].iconstyle = girdStyle.end;\n      return {\n        ...state,\n        grid: moveEndGrid,\n        end: [action.row, action.column],\n        prevEndCellState: prevEndState,\n        prevEndCellColor: prevEndColor,\n      };\n    case PAINT_PATH:\n      const pathGrid = [...state.grid];\n      pathGrid[action.row][action.column] = {\n        ...pathGrid[action.row][action.column],\n      };\n      pathGrid[action.row][action.column].color = girdStyle.path;\n      return { ...state, grid: pathGrid };\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  colorize,\n  paintPath,\n  drawWall,\n  setStart,\n  setEnd,\n} from '../store/store';\nimport 'font-awesome/css/font-awesome.min.css';\nimport style from './selectMenu.module.css';\nclass Grid extends Component {\n  constructor() {\n    super();\n    this.state = {\n      paint: false,\n      moveStart: false,\n      moveEnd: false,\n    };\n\n    this.handleMousrover = this.handleMousrover.bind(this);\n  }\n\n  async handleMousrover(row, col) {\n    if (this.state.moveStart && this.props.grid[row][col].state !== 'Goal') {\n      await this.props.setStart(row, col);\n    } else if (\n      this.state.moveEnd &&\n      this.props.grid[row][col].state !== 'start'\n    ) {\n      await this.props.setEnd(row, col);\n    } else if (this.state.paint) {\n      this.props.drawWall(row, col);\n    }\n  }\n  stopMoveCell = (grid, row, col) => {\n    if (grid[row][col].state === 'start') {\n      this.setState({ moveStart: false });\n    } else if (grid[row][col].state === 'Goal') {\n      this.setState({ moveEnd: false });\n    } else {\n      this.setState({ paint: false });\n    }\n  };\n\n  startMoveCell = (grid, row, col) => {\n    if (grid[row][col].state === 'start') {\n      this.setState({ moveStart: true });\n    } else if (grid[row][col].state === 'Goal') {\n      this.setState({ moveEnd: true });\n    } else {\n      this.setState({ paint: true });\n    }\n  };\n  render() {\n    const { grid } = this.props;\n\n    return (\n      <div id='pixelate'>\n        {/* truncated for brevity... */}\n        <table>\n          <tbody>\n            {grid.map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {row.map((color, cellIndex) => (\n                  <td\n                    key={cellIndex}\n                    onMouseOver={() =>\n                      this.handleMousrover(rowIndex, cellIndex)\n                    }\n                    onMouseUp={() => {\n                      this.stopMoveCell(grid, rowIndex, cellIndex);\n                    }}\n                    onMouseDown={() => {\n                      this.startMoveCell(grid, rowIndex, cellIndex);\n                    }}\n                    onClick={() => {\n                      this.props.drawWall(rowIndex, cellIndex);\n                    }}\n                    className={grid[rowIndex][cellIndex].color}\n                  >\n                    <i\n                      className={`${grid[rowIndex][cellIndex].icon} ${grid[rowIndex][cellIndex].iconstyle}`}\n                      style={{ color: 'blue', marginLeft: '3.5px' }}\n                    ></i>\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    grid: state.grid,\n    start: state.start,\n    end: state.end,\n  };\n};\nconst mapDispatch = (dispatch) => {\n  return {\n    paint: (row, col) => dispatch(colorize(row, col)),\n    paintPath: (row, col) => dispatch(paintPath(row, col)),\n    drawWall: (row, col) => dispatch(drawWall(row, col)),\n    setStart: (row, col) => dispatch(setStart(row, col)),\n    setEnd: (row, col) => dispatch(setEnd(row, col)),\n  };\n};\nexport default connect(mapState, mapDispatch)(Grid);\n","export const sleep = (milliseconds) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, milliseconds);\n  });\n};\n","import { sleep } from './ult';\n\nexport const bfs = async function (grid, startCoordinates, callback) {\n  var distanceFromTop = startCoordinates[0];\n  var distanceFromLeft = startCoordinates[1];\n\n  // Each \"location\" will store its coordinates\n  // and the shortest path required to arrive there\n  var location = {\n    distanceFromTop: distanceFromTop,\n    distanceFromLeft: distanceFromLeft,\n    path: [],\n    status: 'Start',\n  };\n  callback(startCoordinates[0], startCoordinates[1]);\n  await sleep(0);\n\n  // Initialize the queue with the start location already inside\n  var queue = [location];\n  const visited = new Set();\n  // Loop through the grid searching for the goal\n  while (queue.length > 0) {\n    // Take the first location off the queue\n    var currentLocation = queue.shift();\n\n    // Explore North\n    var newLocationNorth = await exploreInDirection(\n      currentLocation,\n      'North',\n      grid,\n      callback,\n      visited\n    );\n\n    if (newLocationNorth.status === 'Goal') {\n      return newLocationNorth.path;\n    } else if (newLocationNorth.status === 'Valid') {\n      queue.push(newLocationNorth);\n    }\n\n    // Explore East\n    var newLocationEast = await exploreInDirection(\n      currentLocation,\n      'East',\n      grid,\n      callback,\n      visited\n    );\n    if (newLocationEast.status === 'Goal') {\n      return newLocationEast.path;\n    } else if (newLocationEast.status === 'Valid') {\n      queue.push(newLocationEast);\n    }\n\n    // Explore South\n    var newLocationSouth = await exploreInDirection(\n      currentLocation,\n      'South',\n      grid,\n      callback,\n      visited\n    );\n    if (newLocationSouth.status === 'Goal') {\n      return newLocationSouth.path;\n    } else if (newLocationSouth.status === 'Valid') {\n      queue.push(newLocationSouth);\n    }\n\n    // Explore West\n    var newLocationWest = await exploreInDirection(\n      currentLocation,\n      'West',\n      grid,\n      callback,\n      visited\n    );\n    if (newLocationWest.status === 'Goal') {\n      return newLocationWest.path;\n    } else if (newLocationWest.status === 'Valid') {\n      queue.push(newLocationWest);\n    }\n  }\n\n  // No valid path found\n  return false;\n};\n\n// This function will check a location's status\n// (a location is \"valid\" if it is on the grid, is not an \"obstacle\",\n// and has not yet been visited by our algorithm)\n// Returns \"Valid\", \"Invalid\", \"Blocked\", or \"Goal\"\nvar locationStatus = function (location, grid, set) {\n  var maxRowSize = grid.length;\n  var maxColSize = grid[0].length;\n  var dft = location.distanceFromTop;\n  var dfl = location.distanceFromLeft;\n\n  if (\n    location.distanceFromLeft < 0 ||\n    location.distanceFromLeft >= maxColSize ||\n    location.distanceFromTop < 0 ||\n    location.distanceFromTop >= maxRowSize ||\n    set.has(`${location.distanceFromTop}|${location.distanceFromLeft}`)\n  ) {\n    // location is not on the grid--return false\n    return 'Invalid';\n  } else if (grid[dft][dfl].state === 'Goal') {\n    return 'Goal';\n  } else if (grid[dft][dfl].state !== 'Empty') {\n    // location is either an obstacle or has been visited\n    return 'Blocked';\n  } else {\n    return 'Valid';\n  }\n};\n\n// Explores the grid from the given location in the given\n// direction\nvar exploreInDirection = async function (\n  currentLocation,\n  direction,\n  grid,\n  callback,\n  set\n) {\n  var newPath = currentLocation.path.slice();\n  newPath.push(direction);\n\n  var dft = currentLocation.distanceFromTop;\n  var dfl = currentLocation.distanceFromLeft;\n\n  if (direction === 'North') {\n    dft -= 1;\n  } else if (direction === 'East') {\n    dfl += 1;\n  } else if (direction === 'South') {\n    dft += 1;\n  } else if (direction === 'West') {\n    dfl -= 1;\n  }\n\n  var newLocation = {\n    distanceFromTop: dft,\n    distanceFromLeft: dfl,\n    path: newPath,\n    status: 'Unknown',\n  };\n  newLocation.status = locationStatus(newLocation, grid, set);\n\n  // If this new location is valid, mark it as 'Visited'\n  if (newLocation.status === 'Valid') {\n    set.add(`${newLocation.distanceFromTop}|${newLocation.distanceFromLeft}`);\n    callback(newLocation.distanceFromTop, newLocation.distanceFromLeft);\n    await sleep(0);\n  } else if (newLocation.status === 'Goal') {\n    callback(newLocation.distanceFromTop, newLocation.distanceFromLeft);\n    await sleep(0);\n  }\n\n  return newLocation;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { clear, colorize, paintPath } from '../store/store';\nimport { bfs } from './BFS';\nimport { sleep } from './ult';\nimport headerStyle from './header.module.css';\nimport buttonStyle from './button.module.scss';\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      algo: 'Algorithms',\n    };\n  }\n  search = async (grid, start) => {\n    //run the bfs function search\n    let ans = await bfs(grid, start, this.props.paint);\n\n    //north,south,west,east\n    let direction = {\n      North: [-1, 0],\n      South: [1, 0],\n      West: [0, -1],\n      East: [0, 1],\n    };\n\n    let startrow = start[0];\n    let startcol = start[1];\n    //draw the path after we have the direction from bfs function\n    for (let i = 0; i < ans.length; ++i) {\n      this.props.paintPath(startrow, startcol);\n      await sleep(20);\n      let dr = direction[ans[i]];\n      startrow += dr[0];\n      startcol += dr[1];\n    }\n    //draw the last cell\n    this.props.paintPath(startrow, startcol);\n    await sleep(20);\n  };\n  render() {\n    const { grid, start } = this.props;\n    return (\n      // <div className={headerStyle.header}>\n      //   <h3>PathFinding Visualizer</h3>\n\n      //   <select name='cars' id='cars' className={headerStyle.select}>\n      //     <option value='volvo'>Volvo</option>\n      //     <option value='saab'>Saab</option>\n      //     <option value='mercedes'>Mercedes</option>\n      //     <option value='audi'>Audi</option>\n      //   </select>\n\n      //   <button\n      //     className={buttonStyle.startBtn}\n      //     onClick={() => this.search(grid, start)}\n      //   >\n      //     <p style={{ color: 'white', fontWeight: 'bold' }}>Start</p>\n      //   </button>\n\n      // </div>\n      <Navbar\n        className={headerStyle.header}\n        expand='lg'\n        onSelect={(eventKey) => {\n          this.setState({ algo: eventKey });\n        }}\n      >\n        <Navbar.Brand\n          className={headerStyle.brand}\n          href='https://chaohuichen.github.io/PathFindingVisualizer/'\n          style={{ fontWeight: 'bold', color: 'white', fontSize: '30px' }}\n        >\n          PathFinding Visualizer\n        </Navbar.Brand>\n\n        <a\n          href='#'\n          role='button'\n          className={buttonStyle.startBtn}\n          onClick={() => {\n            this.search(grid, start);\n            return false;\n          }}\n          style={{ textDecoration: 'none' }}\n        >\n          <p className={buttonStyle.buttonText}>Start</p>\n        </a>\n        <a\n          href='#'\n          role='button'\n          className={buttonStyle.endBtn}\n          onClick={this.props.clear}\n        >\n          <p className={buttonStyle.buttonText} style={{ marginLeft: '14px' }}>\n            Clear\n          </p>\n        </a>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav>\n            {/* <Nav.Link href='#link'>Link</Nav.Link> */}\n            <NavDropdown title={this.state.algo} id='basic-nav-dropdown'>\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey='BreathFirstSearch'\n              >\n                Breadth First Search\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey='DepthFirstSearch'\n              >\n                Depth First Search\n              </NavDropdown.Item>\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey='A * Algorithm'\n              >\n                A * Algorithm\n              </NavDropdown.Item>\n\n              <NavDropdown.Item\n                className={headerStyle.navitem}\n                eventKey=\"Dijkstra's Algorithm\"\n              >\n                Dijkstra's Algorithm\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    grid: state.grid,\n    start: state.start,\n    end: state.end,\n  };\n};\nconst mapDispatch = (dispatch) => {\n  return {\n    clear: () => dispatch(clear()),\n    paint: (row, col) => dispatch(colorize(row, col)),\n    paintPath: (row, col) => dispatch(paintPath(row, col)),\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Header);\n","import React from 'react';\n\nimport './App.css';\nimport Grid from './Grid';\nimport Header from './Header';\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/store';\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}